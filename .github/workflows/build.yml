name: Build, Test, and Deploy

on:
  push:
    branches: [main, CD]  # Trigger CI on pushes to main
  pull_request:
    branches: [main, CD]  # Trigger CI on PRs to main
  release:
    types: [published]  # Trigger CD when a release is published

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: Install root dependencies
        run: npm ci

      - name: Install dependencies (Server)
        run: |
          cd server
          npm ci

      - name: Install dependencies (Client)
        run: |
          cd client
          npm ci

      - name: Build Project
        run: |
          cd client
          npm run build --if-present

      - name: Start Server
        run: |
          cd server
          npm start > server.log 2>&1 &
          echo "Server started on port 5050"

      - name: Start Client
        run: |
          cd client
          npm run dev > client.log 2>&1 &
          sleep 5 # ensure the client has time to start
          echo "Client started on port 5173"

  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: Install dependencies (Server)
        run: |
          cd server
          npm ci

      - name: Install dependencies (Client)
        run: |
          cd client
          npm ci

      - name: Run Server Tests
        run: |
          cd server
          npm test

      - name: Run Client Tests
        run: |
          cd client
          npm test

  deploy:
    needs: [build, test]  # Ensure build and test jobs succeed before deploying
    runs-on: ubuntu-latest
  
    # Only run this job when a release is published
    if: startsWith(github.ref, 'refs/tags/')
  
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
  
      - name: Set Up Docker Buildx
        uses: docker/setup-buildx-action@v2
  
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

  
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            realprash/fullstackflush:${{ github.event.release.tag_name }}  # Use the release tag (e.g., v1.0.0)
            realprash/fullstackflush:latest  # Optionally push as 'latest'
  
